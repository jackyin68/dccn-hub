// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.dccncli";
option java_outer_classname = "DccnCliProto";

package dccncli;

// The dccncli service definition.
service dccncli {
  // Sends request to start a task and list task
  rpc AddTask (AddTaskRequest) returns (AddTaskResponse) {}
  rpc TaskList (TaskListRequest) returns (TaskListResponse) {}
  rpc CancelTask (CancelTaskRequest) returns (CancelTaskResponse) {}
  rpc K8ReportStatus(ReportRequest) returns (ReportResponse) {}  // k8s send this message
  rpc K8QueryTask(QueryTaskRequest)returns (QueryTaskResponse) {} // k8s end this message
}

// The dccn client request message containing the user's token
message AddTaskRequest {
  string name = 1; // name of the task/image to run
  string region = 2; // region e.g US
  string zone = 3; // zone EST, PST etc
  string usertoken = 4; //user account, alphanumeric chars, may not be used now for authentication
}

// The Ankr Hub response message containing the success or failure
message AddTaskResponse {
  string status = 1; // Success or Failure
  int64 taskid = 2; //  id of task if success, in case of failure return -1
}

// The Client List request message
message TaskListRequest {
  string usertoken = 1; // List task for the account
}

message TaskInfo {
  int64  taskid = 1;
  string taskname = 2; // List task for the account
  uint32 uptime = 3; // uptime of the task
  uint64 creationdate = 4; //task creation date
  string status = 5; // Active or inactive, Right now all tasks active
}

message TaskListResponse {
  repeated TaskInfo tasksinfo = 1; // repeated groups of taskinfo list
}

message CancelTaskRequest{
     string usertoken = 1;
     int64  taskid = 2;
}

message CancelTaskResponse{
     string status = 1; // Success or Failure
}

message ReportRequest{
    string name = 1;  // datacenter name
    string report = 2;
    string host = 3;
    int64 port = 4;
}

message ReportResponse{
   string status = 1; // Success or Failure
}

message QueryTaskRequest{
    string name = 1;  // datacenter name
}

message QueryTaskResponse{
    int64 taskid = 1; //  id of task
    string name = 2; // name of the task/image to run after hub selects the right datacenter
    string extra = 3; //extra for other arguments
}
