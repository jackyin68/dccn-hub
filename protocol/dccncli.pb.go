// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dccncli.proto

package simpapp

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The dccn client request message containing the user's token
type ClientStartRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Region               string   `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Zone                 string   `protobuf:"bytes,3,opt,name=zone,proto3" json:"zone,omitempty"`
	Usertoken            string   `protobuf:"bytes,4,opt,name=usertoken,proto3" json:"usertoken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientStartRequest) Reset()         { *m = ClientStartRequest{} }
func (m *ClientStartRequest) String() string { return proto.CompactTextString(m) }
func (*ClientStartRequest) ProtoMessage()    {}
func (*ClientStartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{0}
}

func (m *ClientStartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientStartRequest.Unmarshal(m, b)
}
func (m *ClientStartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientStartRequest.Marshal(b, m, deterministic)
}
func (m *ClientStartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientStartRequest.Merge(m, src)
}
func (m *ClientStartRequest) XXX_Size() int {
	return xxx_messageInfo_ClientStartRequest.Size(m)
}
func (m *ClientStartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientStartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClientStartRequest proto.InternalMessageInfo

func (m *ClientStartRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClientStartRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ClientStartRequest) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *ClientStartRequest) GetUsertoken() string {
	if m != nil {
		return m.Usertoken
	}
	return ""
}

// The Ankr Hub response message containing the success or failure
type ServerStartResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Taskid               int64    `protobuf:"varint,2,opt,name=taskid,proto3" json:"taskid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerStartResponse) Reset()         { *m = ServerStartResponse{} }
func (m *ServerStartResponse) String() string { return proto.CompactTextString(m) }
func (*ServerStartResponse) ProtoMessage()    {}
func (*ServerStartResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{1}
}

func (m *ServerStartResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerStartResponse.Unmarshal(m, b)
}
func (m *ServerStartResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerStartResponse.Marshal(b, m, deterministic)
}
func (m *ServerStartResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerStartResponse.Merge(m, src)
}
func (m *ServerStartResponse) XXX_Size() int {
	return xxx_messageInfo_ServerStartResponse.Size(m)
}
func (m *ServerStartResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerStartResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServerStartResponse proto.InternalMessageInfo

func (m *ServerStartResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ServerStartResponse) GetTaskid() int64 {
	if m != nil {
		return m.Taskid
	}
	return 0
}

// The Client List request message
type ClientListRequest struct {
	Usertoken            string   `protobuf:"bytes,1,opt,name=usertoken,proto3" json:"usertoken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientListRequest) Reset()         { *m = ClientListRequest{} }
func (m *ClientListRequest) String() string { return proto.CompactTextString(m) }
func (*ClientListRequest) ProtoMessage()    {}
func (*ClientListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{2}
}

func (m *ClientListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientListRequest.Unmarshal(m, b)
}
func (m *ClientListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientListRequest.Marshal(b, m, deterministic)
}
func (m *ClientListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientListRequest.Merge(m, src)
}
func (m *ClientListRequest) XXX_Size() int {
	return xxx_messageInfo_ClientListRequest.Size(m)
}
func (m *ClientListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClientListRequest proto.InternalMessageInfo

func (m *ClientListRequest) GetUsertoken() string {
	if m != nil {
		return m.Usertoken
	}
	return ""
}

type ServerListResponse struct {
	Taskname             string   `protobuf:"bytes,1,opt,name=taskname,proto3" json:"taskname,omitempty"`
	Uptime               uint32   `protobuf:"varint,2,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Creationdate         uint64   `protobuf:"varint,3,opt,name=creationdate,proto3" json:"creationdate,omitempty"`
	Status               string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerListResponse) Reset()         { *m = ServerListResponse{} }
func (m *ServerListResponse) String() string { return proto.CompactTextString(m) }
func (*ServerListResponse) ProtoMessage()    {}
func (*ServerListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{3}
}

func (m *ServerListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerListResponse.Unmarshal(m, b)
}
func (m *ServerListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerListResponse.Marshal(b, m, deterministic)
}
func (m *ServerListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerListResponse.Merge(m, src)
}
func (m *ServerListResponse) XXX_Size() int {
	return xxx_messageInfo_ServerListResponse.Size(m)
}
func (m *ServerListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServerListResponse proto.InternalMessageInfo

func (m *ServerListResponse) GetTaskname() string {
	if m != nil {
		return m.Taskname
	}
	return ""
}

func (m *ServerListResponse) GetUptime() uint32 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *ServerListResponse) GetCreationdate() uint64 {
	if m != nil {
		return m.Creationdate
	}
	return 0
}

func (m *ServerListResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*ClientStartRequest)(nil), "simpapp.ClientStartRequest")
	proto.RegisterType((*ServerStartResponse)(nil), "simpapp.ServerStartResponse")
	proto.RegisterType((*ClientListRequest)(nil), "simpapp.ClientListRequest")
	proto.RegisterType((*ServerListResponse)(nil), "simpapp.ServerListResponse")
}

func init() { proto.RegisterFile("dccncli.proto", fileDescriptor_97ba3c0cb7e5628c) }

var fileDescriptor_97ba3c0cb7e5628c = []byte{
	// 327 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x92, 0xc1, 0x4e, 0x32, 0x31,
	0x10, 0xc7, 0xd9, 0x8f, 0x0d, 0x9f, 0x4c, 0xe0, 0x60, 0x8d, 0x64, 0xb3, 0x70, 0x30, 0x7b, 0x32,
	0x1e, 0x36, 0x51, 0xdf, 0x00, 0xe3, 0xcd, 0x03, 0xd9, 0x8d, 0x0f, 0x50, 0x77, 0x27, 0xa4, 0x01,
	0xda, 0xda, 0xce, 0x1a, 0xe3, 0xd9, 0x47, 0xf2, 0x01, 0xa5, 0xbb, 0x05, 0x0a, 0x72, 0x9b, 0xff,
	0xfc, 0xa7, 0xf3, 0xeb, 0x4c, 0x0b, 0xe3, 0xba, 0xaa, 0x64, 0xb5, 0x16, 0xb9, 0x36, 0x8a, 0x14,
	0xfb, 0x6f, 0xc5, 0x46, 0x73, 0xad, 0x33, 0x03, 0xec, 0x69, 0x2d, 0x50, 0x52, 0x49, 0xdc, 0x50,
	0x81, 0xef, 0x0d, 0x5a, 0x62, 0x0c, 0x62, 0xc9, 0x37, 0x98, 0x44, 0x37, 0xd1, 0xed, 0xb0, 0x68,
	0x63, 0x36, 0x81, 0x81, 0xc1, 0xa5, 0x50, 0x32, 0xf9, 0xd7, 0x66, 0xbd, 0x72, 0xb5, 0x5f, 0x4a,
	0x62, 0xd2, 0xef, 0x6a, 0x5d, 0xcc, 0x66, 0x30, 0x6c, 0x2c, 0x1a, 0x52, 0x2b, 0x94, 0x49, 0xdc,
	0x1a, 0x87, 0x44, 0xf6, 0x0c, 0x57, 0x25, 0x9a, 0x0f, 0x34, 0x9e, 0x69, 0xb5, 0x92, 0xb6, 0x05,
	0x58, 0xe2, 0xd4, 0x58, 0x8f, 0xf5, 0xca, 0xe5, 0x89, 0xdb, 0x95, 0xa8, 0x5b, 0x70, 0xbf, 0xf0,
	0x2a, 0xbb, 0x87, 0xcb, 0xee, 0xea, 0x2f, 0xc2, 0xee, 0x6f, 0x7e, 0x44, 0x8e, 0x4e, 0xc9, 0xdf,
	0x11, 0xb0, 0x0e, 0xdd, 0x9d, 0xf1, 0xe4, 0x14, 0x2e, 0x5c, 0xcf, 0x60, 0xe4, 0xbd, 0x76, 0xf4,
	0x46, 0x93, 0xd8, 0x3a, 0x8e, 0x3e, 0x2e, 0xbc, 0x62, 0x19, 0x8c, 0x2a, 0x83, 0x9c, 0xb6, 0x2b,
	0xa8, 0x39, 0x75, 0xe3, 0xc7, 0xc5, 0x51, 0x2e, 0x98, 0x28, 0x0e, 0x27, 0x7a, 0xf8, 0x89, 0x60,
	0xf7, 0x00, 0xec, 0x15, 0x26, 0x25, 0xca, 0xfa, 0xcc, 0x23, 0x4c, 0x73, 0x5f, 0x93, 0xff, 0x35,
	0xd3, 0xd9, 0xde, 0x3c, 0xb3, 0xca, 0xac, 0xc7, 0x0a, 0xb8, 0x3e, 0xb4, 0x0d, 0x17, 0x94, 0x9e,
	0x74, 0x0d, 0xbc, 0x74, 0x7a, 0xd2, 0x34, 0x5c, 0x52, 0xd6, 0x9b, 0xdf, 0x41, 0x22, 0x54, 0xbe,
	0x34, 0xba, 0xca, 0xf1, 0x93, 0x6f, 0xf4, 0x1a, 0xed, 0xee, 0xc0, 0x7c, 0x54, 0x76, 0xc1, 0xc2,
	0x7d, 0xaf, 0x45, 0xf4, 0x36, 0x68, 0xff, 0xd9, 0xe3, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa9,
	0x29, 0x9d, 0xa7, 0x78, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SimpappClient is the client API for Simpapp service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SimpappClient interface {
	// Sends a greeting
	SendClientStartRequest(ctx context.Context, in *ClientStartRequest, opts ...grpc.CallOption) (*ServerStartResponse, error)
	SendClientListRequest(ctx context.Context, in *ClientListRequest, opts ...grpc.CallOption) (*ServerListResponse, error)
}

type simpappClient struct {
	cc *grpc.ClientConn
}

func NewSimpappClient(cc *grpc.ClientConn) SimpappClient {
	return &simpappClient{cc}
}

func (c *simpappClient) SendClientStartRequest(ctx context.Context, in *ClientStartRequest, opts ...grpc.CallOption) (*ServerStartResponse, error) {
	out := new(ServerStartResponse)
	err := c.cc.Invoke(ctx, "/simpapp.simpapp/SendClientStartRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simpappClient) SendClientListRequest(ctx context.Context, in *ClientListRequest, opts ...grpc.CallOption) (*ServerListResponse, error) {
	out := new(ServerListResponse)
	err := c.cc.Invoke(ctx, "/simpapp.simpapp/SendClientListRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SimpappServer is the server API for Simpapp service.
type SimpappServer interface {
	// Sends a greeting
	SendClientStartRequest(context.Context, *ClientStartRequest) (*ServerStartResponse, error)
	SendClientListRequest(context.Context, *ClientListRequest) (*ServerListResponse, error)
}

func RegisterSimpappServer(s *grpc.Server, srv SimpappServer) {
	s.RegisterService(&_Simpapp_serviceDesc, srv)
}

func _Simpapp_SendClientStartRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientStartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimpappServer).SendClientStartRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/simpapp.simpapp/SendClientStartRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimpappServer).SendClientStartRequest(ctx, req.(*ClientStartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Simpapp_SendClientListRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimpappServer).SendClientListRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/simpapp.simpapp/SendClientListRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimpappServer).SendClientListRequest(ctx, req.(*ClientListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Simpapp_serviceDesc = grpc.ServiceDesc{
	ServiceName: "simpapp.simpapp",
	HandlerType: (*SimpappServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendClientStartRequest",
			Handler:    _Simpapp_SendClientStartRequest_Handler,
		},
		{
			MethodName: "SendClientListRequest",
			Handler:    _Simpapp_SendClientListRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dccncli.proto",
}
