// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dccncli.proto

package dccncli

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The dccn client request message containing the user's token
type AddTaskRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Region               string   `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Zone                 string   `protobuf:"bytes,3,opt,name=zone,proto3" json:"zone,omitempty"`
	Usertoken            string   `protobuf:"bytes,4,opt,name=usertoken,proto3" json:"usertoken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTaskRequest) Reset()         { *m = AddTaskRequest{} }
func (m *AddTaskRequest) String() string { return proto.CompactTextString(m) }
func (*AddTaskRequest) ProtoMessage()    {}
func (*AddTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{0}
}

func (m *AddTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTaskRequest.Unmarshal(m, b)
}
func (m *AddTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTaskRequest.Marshal(b, m, deterministic)
}
func (m *AddTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTaskRequest.Merge(m, src)
}
func (m *AddTaskRequest) XXX_Size() int {
	return xxx_messageInfo_AddTaskRequest.Size(m)
}
func (m *AddTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddTaskRequest proto.InternalMessageInfo

func (m *AddTaskRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddTaskRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *AddTaskRequest) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *AddTaskRequest) GetUsertoken() string {
	if m != nil {
		return m.Usertoken
	}
	return ""
}

// The Ankr Hub response message containing the success or failure
type AddTaskResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Taskid               int64    `protobuf:"varint,2,opt,name=taskid,proto3" json:"taskid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTaskResponse) Reset()         { *m = AddTaskResponse{} }
func (m *AddTaskResponse) String() string { return proto.CompactTextString(m) }
func (*AddTaskResponse) ProtoMessage()    {}
func (*AddTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{1}
}

func (m *AddTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTaskResponse.Unmarshal(m, b)
}
func (m *AddTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTaskResponse.Marshal(b, m, deterministic)
}
func (m *AddTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTaskResponse.Merge(m, src)
}
func (m *AddTaskResponse) XXX_Size() int {
	return xxx_messageInfo_AddTaskResponse.Size(m)
}
func (m *AddTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddTaskResponse proto.InternalMessageInfo

func (m *AddTaskResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *AddTaskResponse) GetTaskid() int64 {
	if m != nil {
		return m.Taskid
	}
	return 0
}

// The Client List request message
type TaskListRequest struct {
	Usertoken            string   `protobuf:"bytes,1,opt,name=usertoken,proto3" json:"usertoken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskListRequest) Reset()         { *m = TaskListRequest{} }
func (m *TaskListRequest) String() string { return proto.CompactTextString(m) }
func (*TaskListRequest) ProtoMessage()    {}
func (*TaskListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{2}
}

func (m *TaskListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskListRequest.Unmarshal(m, b)
}
func (m *TaskListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskListRequest.Marshal(b, m, deterministic)
}
func (m *TaskListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskListRequest.Merge(m, src)
}
func (m *TaskListRequest) XXX_Size() int {
	return xxx_messageInfo_TaskListRequest.Size(m)
}
func (m *TaskListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskListRequest proto.InternalMessageInfo

func (m *TaskListRequest) GetUsertoken() string {
	if m != nil {
		return m.Usertoken
	}
	return ""
}

type TaskInfo struct {
	Taskid               int64    `protobuf:"varint,1,opt,name=taskid,proto3" json:"taskid,omitempty"`
	Taskname             string   `protobuf:"bytes,2,opt,name=taskname,proto3" json:"taskname,omitempty"`
	Uptime               uint32   `protobuf:"varint,3,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Creationdate         uint64   `protobuf:"varint,4,opt,name=creationdate,proto3" json:"creationdate,omitempty"`
	Status               string   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskInfo) Reset()         { *m = TaskInfo{} }
func (m *TaskInfo) String() string { return proto.CompactTextString(m) }
func (*TaskInfo) ProtoMessage()    {}
func (*TaskInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{3}
}

func (m *TaskInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskInfo.Unmarshal(m, b)
}
func (m *TaskInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskInfo.Marshal(b, m, deterministic)
}
func (m *TaskInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskInfo.Merge(m, src)
}
func (m *TaskInfo) XXX_Size() int {
	return xxx_messageInfo_TaskInfo.Size(m)
}
func (m *TaskInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TaskInfo proto.InternalMessageInfo

func (m *TaskInfo) GetTaskid() int64 {
	if m != nil {
		return m.Taskid
	}
	return 0
}

func (m *TaskInfo) GetTaskname() string {
	if m != nil {
		return m.Taskname
	}
	return ""
}

func (m *TaskInfo) GetUptime() uint32 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *TaskInfo) GetCreationdate() uint64 {
	if m != nil {
		return m.Creationdate
	}
	return 0
}

func (m *TaskInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type TaskListResponse struct {
	Tasksinfo            []*TaskInfo `protobuf:"bytes,1,rep,name=tasksinfo,proto3" json:"tasksinfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TaskListResponse) Reset()         { *m = TaskListResponse{} }
func (m *TaskListResponse) String() string { return proto.CompactTextString(m) }
func (*TaskListResponse) ProtoMessage()    {}
func (*TaskListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{4}
}

func (m *TaskListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskListResponse.Unmarshal(m, b)
}
func (m *TaskListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskListResponse.Marshal(b, m, deterministic)
}
func (m *TaskListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskListResponse.Merge(m, src)
}
func (m *TaskListResponse) XXX_Size() int {
	return xxx_messageInfo_TaskListResponse.Size(m)
}
func (m *TaskListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TaskListResponse proto.InternalMessageInfo

func (m *TaskListResponse) GetTasksinfo() []*TaskInfo {
	if m != nil {
		return m.Tasksinfo
	}
	return nil
}

type CancelTaskRequest struct {
	Usertoken            string   `protobuf:"bytes,1,opt,name=usertoken,proto3" json:"usertoken,omitempty"`
	Taskid               int64    `protobuf:"varint,2,opt,name=taskid,proto3" json:"taskid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelTaskRequest) Reset()         { *m = CancelTaskRequest{} }
func (m *CancelTaskRequest) String() string { return proto.CompactTextString(m) }
func (*CancelTaskRequest) ProtoMessage()    {}
func (*CancelTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{5}
}

func (m *CancelTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelTaskRequest.Unmarshal(m, b)
}
func (m *CancelTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelTaskRequest.Marshal(b, m, deterministic)
}
func (m *CancelTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelTaskRequest.Merge(m, src)
}
func (m *CancelTaskRequest) XXX_Size() int {
	return xxx_messageInfo_CancelTaskRequest.Size(m)
}
func (m *CancelTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelTaskRequest proto.InternalMessageInfo

func (m *CancelTaskRequest) GetUsertoken() string {
	if m != nil {
		return m.Usertoken
	}
	return ""
}

func (m *CancelTaskRequest) GetTaskid() int64 {
	if m != nil {
		return m.Taskid
	}
	return 0
}

type CancelTaskResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelTaskResponse) Reset()         { *m = CancelTaskResponse{} }
func (m *CancelTaskResponse) String() string { return proto.CompactTextString(m) }
func (*CancelTaskResponse) ProtoMessage()    {}
func (*CancelTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{6}
}

func (m *CancelTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelTaskResponse.Unmarshal(m, b)
}
func (m *CancelTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelTaskResponse.Marshal(b, m, deterministic)
}
func (m *CancelTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelTaskResponse.Merge(m, src)
}
func (m *CancelTaskResponse) XXX_Size() int {
	return xxx_messageInfo_CancelTaskResponse.Size(m)
}
func (m *CancelTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CancelTaskResponse proto.InternalMessageInfo

func (m *CancelTaskResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// this is old logic
type ReportRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Report               string   `protobuf:"bytes,2,opt,name=report,proto3" json:"report,omitempty"`
	Host                 string   `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Port                 int64    `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportRequest) Reset()         { *m = ReportRequest{} }
func (m *ReportRequest) String() string { return proto.CompactTextString(m) }
func (*ReportRequest) ProtoMessage()    {}
func (*ReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{7}
}

func (m *ReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportRequest.Unmarshal(m, b)
}
func (m *ReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportRequest.Marshal(b, m, deterministic)
}
func (m *ReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportRequest.Merge(m, src)
}
func (m *ReportRequest) XXX_Size() int {
	return xxx_messageInfo_ReportRequest.Size(m)
}
func (m *ReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReportRequest proto.InternalMessageInfo

func (m *ReportRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReportRequest) GetReport() string {
	if m != nil {
		return m.Report
	}
	return ""
}

func (m *ReportRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ReportRequest) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

type ReportResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportResponse) Reset()         { *m = ReportResponse{} }
func (m *ReportResponse) String() string { return proto.CompactTextString(m) }
func (*ReportResponse) ProtoMessage()    {}
func (*ReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{8}
}

func (m *ReportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportResponse.Unmarshal(m, b)
}
func (m *ReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportResponse.Marshal(b, m, deterministic)
}
func (m *ReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportResponse.Merge(m, src)
}
func (m *ReportResponse) XXX_Size() int {
	return xxx_messageInfo_ReportResponse.Size(m)
}
func (m *ReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReportResponse proto.InternalMessageInfo

func (m *ReportResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type Task struct {
	Type                 string   `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Taskid               int64    `protobuf:"varint,2,opt,name=taskid,proto3" json:"taskid,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Image                string   `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Extra                string   `protobuf:"bytes,5,opt,name=extra,proto3" json:"extra,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{9}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Task) GetTaskid() int64 {
	if m != nil {
		return m.Taskid
	}
	return 0
}

func (m *Task) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Task) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Task) GetExtra() string {
	if m != nil {
		return m.Extra
	}
	return ""
}

type K8SMessage struct {
	Type                 string   `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Taskid               int64    `protobuf:"varint,2,opt,name=taskid,proto3" json:"taskid,omitempty"`
	Status               string   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Datacenter           string   `protobuf:"bytes,4,opt,name=datacenter,proto3" json:"datacenter,omitempty"`
	Report               string   `protobuf:"bytes,5,opt,name=report,proto3" json:"report,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *K8SMessage) Reset()         { *m = K8SMessage{} }
func (m *K8SMessage) String() string { return proto.CompactTextString(m) }
func (*K8SMessage) ProtoMessage()    {}
func (*K8SMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{10}
}

func (m *K8SMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_K8SMessage.Unmarshal(m, b)
}
func (m *K8SMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_K8SMessage.Marshal(b, m, deterministic)
}
func (m *K8SMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_K8SMessage.Merge(m, src)
}
func (m *K8SMessage) XXX_Size() int {
	return xxx_messageInfo_K8SMessage.Size(m)
}
func (m *K8SMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_K8SMessage.DiscardUnknown(m)
}

var xxx_messageInfo_K8SMessage proto.InternalMessageInfo

func (m *K8SMessage) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *K8SMessage) GetTaskid() int64 {
	if m != nil {
		return m.Taskid
	}
	return 0
}

func (m *K8SMessage) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *K8SMessage) GetDatacenter() string {
	if m != nil {
		return m.Datacenter
	}
	return ""
}

func (m *K8SMessage) GetReport() string {
	if m != nil {
		return m.Report
	}
	return ""
}

func init() {
	proto.RegisterType((*AddTaskRequest)(nil), "dccncli.AddTaskRequest")
	proto.RegisterType((*AddTaskResponse)(nil), "dccncli.AddTaskResponse")
	proto.RegisterType((*TaskListRequest)(nil), "dccncli.TaskListRequest")
	proto.RegisterType((*TaskInfo)(nil), "dccncli.TaskInfo")
	proto.RegisterType((*TaskListResponse)(nil), "dccncli.TaskListResponse")
	proto.RegisterType((*CancelTaskRequest)(nil), "dccncli.CancelTaskRequest")
	proto.RegisterType((*CancelTaskResponse)(nil), "dccncli.CancelTaskResponse")
	proto.RegisterType((*ReportRequest)(nil), "dccncli.ReportRequest")
	proto.RegisterType((*ReportResponse)(nil), "dccncli.ReportResponse")
	proto.RegisterType((*Task)(nil), "dccncli.Task")
	proto.RegisterType((*K8SMessage)(nil), "dccncli.K8SMessage")
}

func init() { proto.RegisterFile("dccncli.proto", fileDescriptor_97ba3c0cb7e5628c) }

var fileDescriptor_97ba3c0cb7e5628c = []byte{
	// 553 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xcd, 0x6e, 0x13, 0x31,
	0x10, 0xee, 0x36, 0x3f, 0x6d, 0x86, 0x26, 0xa5, 0x06, 0xd1, 0x65, 0x41, 0xa8, 0xf2, 0x29, 0x42,
	0x28, 0x45, 0xe1, 0x92, 0x13, 0x52, 0x1a, 0x24, 0x54, 0x05, 0xa4, 0x6a, 0xdb, 0x17, 0x30, 0xbb,
	0x6e, 0x58, 0x25, 0xb1, 0x97, 0xb5, 0x23, 0x15, 0x9e, 0x80, 0x33, 0x0f, 0xc6, 0x33, 0xa1, 0xf1,
	0x7a, 0xbd, 0x5e, 0xd2, 0x1f, 0xf5, 0x36, 0x33, 0xfe, 0x3c, 0x33, 0xdf, 0xf8, 0x1b, 0x43, 0x3f,
	0x4d, 0x12, 0x91, 0xac, 0xb2, 0x51, 0x5e, 0x48, 0x2d, 0xc9, 0x9e, 0x75, 0xa9, 0x80, 0xc1, 0x34,
	0x4d, 0xaf, 0x98, 0x5a, 0xc6, 0xfc, 0xc7, 0x86, 0x2b, 0x4d, 0x08, 0xb4, 0x05, 0x5b, 0xf3, 0x30,
	0x38, 0x09, 0x86, 0xbd, 0xd8, 0xd8, 0xe4, 0x05, 0x74, 0x0b, 0xbe, 0xc8, 0xa4, 0x08, 0x77, 0x4d,
	0xd4, 0x7a, 0x88, 0xfd, 0x25, 0x05, 0x0f, 0x5b, 0x25, 0x16, 0x6d, 0xf2, 0x1a, 0x7a, 0x1b, 0xc5,
	0x0b, 0x2d, 0x97, 0x5c, 0x84, 0x6d, 0x73, 0x50, 0x07, 0xe8, 0x14, 0x0e, 0x5d, 0x3d, 0x95, 0x4b,
	0xa1, 0x4c, 0x72, 0xa5, 0x99, 0xde, 0x28, 0x5b, 0xd2, 0x7a, 0x18, 0xd7, 0x4c, 0x2d, 0xb3, 0xd4,
	0x14, 0x6d, 0xc5, 0xd6, 0xa3, 0xa7, 0x70, 0x88, 0xf7, 0xbf, 0x64, 0x4a, 0x57, 0x3d, 0x37, 0x6a,
	0x06, 0xff, 0xd7, 0xfc, 0x13, 0xc0, 0x3e, 0xde, 0x38, 0x17, 0xd7, 0xd2, 0xcb, 0x1a, 0xf8, 0x59,
	0x49, 0x04, 0xfb, 0x68, 0x19, 0xea, 0x25, 0x49, 0xe7, 0xe3, 0x9d, 0x4d, 0xae, 0xb3, 0x75, 0x49,
	0xb4, 0x1f, 0x5b, 0x8f, 0x50, 0x38, 0x48, 0x0a, 0xce, 0x74, 0x26, 0x45, 0xca, 0x34, 0x37, 0x6c,
	0xdb, 0x71, 0x23, 0xe6, 0xb1, 0xeb, 0xf8, 0xec, 0xe8, 0x0c, 0x9e, 0xd6, 0x2c, 0xec, 0x24, 0x4e,
	0xa1, 0x87, 0x35, 0x55, 0x26, 0xae, 0x65, 0x18, 0x9c, 0xb4, 0x86, 0x4f, 0xc6, 0x47, 0xa3, 0xea,
	0xe1, 0x2a, 0x06, 0x71, 0x8d, 0xa1, 0xe7, 0x70, 0x34, 0x63, 0x22, 0xe1, 0x2b, 0xff, 0x01, 0xef,
	0x1d, 0xc6, 0x9d, 0x53, 0x7d, 0x07, 0xc4, 0x4f, 0x75, 0xff, 0xdb, 0xd0, 0x04, 0xfa, 0x31, 0xcf,
	0x65, 0xa1, 0x1f, 0x54, 0x0d, 0x82, 0x6a, 0xd5, 0xa0, 0x87, 0xd8, 0xef, 0x52, 0xe9, 0x4a, 0x35,
	0x68, 0x63, 0xcc, 0x20, 0xdb, 0xa6, 0x29, 0x63, 0xd3, 0x21, 0x0c, 0xaa, 0x22, 0x0f, 0xb4, 0x53,
	0x40, 0x1b, 0xdb, 0xc6, 0x2c, 0x57, 0x3f, 0x73, 0xd7, 0x05, 0xda, 0x77, 0x11, 0x76, 0x1d, 0xb7,
	0xbc, 0x8e, 0x9f, 0x43, 0x27, 0x5b, 0xb3, 0x05, 0xb7, 0xba, 0x2d, 0x1d, 0x8c, 0xf2, 0x1b, 0x5d,
	0x30, 0xfb, 0x82, 0xa5, 0x43, 0x7f, 0x07, 0x00, 0xf3, 0xc9, 0xe5, 0x57, 0xae, 0x14, 0x82, 0x1e,
	0x53, 0xba, 0xa6, 0xd1, 0x6a, 0x28, 0xfe, 0x0d, 0x40, 0xca, 0x34, 0x4b, 0xb8, 0xd0, 0xbc, 0xb0,
	0x3d, 0x78, 0x11, 0x6f, 0xa0, 0x1d, 0x7f, 0xa0, 0xe3, 0xbf, 0xbb, 0x50, 0x2d, 0x34, 0xf9, 0x08,
	0x7b, 0x76, 0xc1, 0xc8, 0xb1, 0xd3, 0x4e, 0x73, 0xc5, 0xa3, 0x70, 0xfb, 0xa0, 0x1c, 0x30, 0xdd,
	0x21, 0xd3, 0x72, 0x57, 0x50, 0x97, 0x24, 0x6c, 0x88, 0xcf, 0x5b, 0xb8, 0xe8, 0xe5, 0x2d, 0x27,
	0x2e, 0xc5, 0x67, 0x80, 0x5a, 0x4a, 0x24, 0x72, 0xd0, 0x2d, 0xa9, 0x46, 0xaf, 0x6e, 0x3d, 0x73,
	0x89, 0x66, 0x30, 0x98, 0x4f, 0x4a, 0x09, 0x5c, 0xda, 0x3f, 0xc1, 0x5d, 0x68, 0xc8, 0x2f, 0x3a,
	0xde, 0x8a, 0xbb, 0x24, 0x63, 0xe8, 0xce, 0x27, 0xa6, 0x93, 0x67, 0x0e, 0x54, 0xbf, 0x5b, 0xd4,
	0x6f, 0x30, 0xa1, 0x3b, 0xc3, 0xe0, 0x7d, 0x70, 0xf6, 0x16, 0xc2, 0x4c, 0x8e, 0x16, 0x45, 0x9e,
	0x8c, 0xf8, 0x0d, 0x5b, 0xe7, 0x2b, 0xae, 0x2a, 0xd8, 0xd9, 0xc1, 0xa7, 0x24, 0x11, 0xb3, 0x55,
	0x76, 0x81, 0x1f, 0xe9, 0x45, 0xf0, 0xad, 0x6b, 0x7e, 0xd4, 0x0f, 0xff, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x6e, 0x07, 0xea, 0xa1, 0x62, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DccncliClient is the client API for Dccncli service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DccncliClient interface {
	// Sends request to start a task and list task
	AddTask(ctx context.Context, in *AddTaskRequest, opts ...grpc.CallOption) (*AddTaskResponse, error)
	TaskList(ctx context.Context, in *TaskListRequest, opts ...grpc.CallOption) (*TaskListResponse, error)
	CancelTask(ctx context.Context, in *CancelTaskRequest, opts ...grpc.CallOption) (*CancelTaskResponse, error)
	//this is old logic
	K8ReportStatus(ctx context.Context, in *ReportRequest, opts ...grpc.CallOption) (*ReportResponse, error)
	//rpc K8QueryTask(QueryTaskRequest)returns (QueryTaskResponse) {} // k8s end this message
	K8Task(ctx context.Context, opts ...grpc.CallOption) (Dccncli_K8TaskClient, error)
}

type dccncliClient struct {
	cc *grpc.ClientConn
}

func NewDccncliClient(cc *grpc.ClientConn) DccncliClient {
	return &dccncliClient{cc}
}

func (c *dccncliClient) AddTask(ctx context.Context, in *AddTaskRequest, opts ...grpc.CallOption) (*AddTaskResponse, error) {
	out := new(AddTaskResponse)
	err := c.cc.Invoke(ctx, "/dccncli.dccncli/AddTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dccncliClient) TaskList(ctx context.Context, in *TaskListRequest, opts ...grpc.CallOption) (*TaskListResponse, error) {
	out := new(TaskListResponse)
	err := c.cc.Invoke(ctx, "/dccncli.dccncli/TaskList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dccncliClient) CancelTask(ctx context.Context, in *CancelTaskRequest, opts ...grpc.CallOption) (*CancelTaskResponse, error) {
	out := new(CancelTaskResponse)
	err := c.cc.Invoke(ctx, "/dccncli.dccncli/CancelTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dccncliClient) K8ReportStatus(ctx context.Context, in *ReportRequest, opts ...grpc.CallOption) (*ReportResponse, error) {
	out := new(ReportResponse)
	err := c.cc.Invoke(ctx, "/dccncli.dccncli/K8ReportStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dccncliClient) K8Task(ctx context.Context, opts ...grpc.CallOption) (Dccncli_K8TaskClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Dccncli_serviceDesc.Streams[0], "/dccncli.dccncli/K8Task", opts...)
	if err != nil {
		return nil, err
	}
	x := &dccncliK8TaskClient{stream}
	return x, nil
}

type Dccncli_K8TaskClient interface {
	Send(*K8SMessage) error
	Recv() (*Task, error)
	grpc.ClientStream
}

type dccncliK8TaskClient struct {
	grpc.ClientStream
}

func (x *dccncliK8TaskClient) Send(m *K8SMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *dccncliK8TaskClient) Recv() (*Task, error) {
	m := new(Task)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DccncliServer is the server API for Dccncli service.
type DccncliServer interface {
	// Sends request to start a task and list task
	AddTask(context.Context, *AddTaskRequest) (*AddTaskResponse, error)
	TaskList(context.Context, *TaskListRequest) (*TaskListResponse, error)
	CancelTask(context.Context, *CancelTaskRequest) (*CancelTaskResponse, error)
	//this is old logic
	K8ReportStatus(context.Context, *ReportRequest) (*ReportResponse, error)
	//rpc K8QueryTask(QueryTaskRequest)returns (QueryTaskResponse) {} // k8s end this message
	K8Task(Dccncli_K8TaskServer) error
}

func RegisterDccncliServer(s *grpc.Server, srv DccncliServer) {
	s.RegisterService(&_Dccncli_serviceDesc, srv)
}

func _Dccncli_AddTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DccncliServer).AddTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dccncli.dccncli/AddTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DccncliServer).AddTask(ctx, req.(*AddTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dccncli_TaskList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DccncliServer).TaskList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dccncli.dccncli/TaskList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DccncliServer).TaskList(ctx, req.(*TaskListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dccncli_CancelTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DccncliServer).CancelTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dccncli.dccncli/CancelTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DccncliServer).CancelTask(ctx, req.(*CancelTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dccncli_K8ReportStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DccncliServer).K8ReportStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dccncli.dccncli/K8ReportStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DccncliServer).K8ReportStatus(ctx, req.(*ReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dccncli_K8Task_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DccncliServer).K8Task(&dccncliK8TaskServer{stream})
}

type Dccncli_K8TaskServer interface {
	Send(*Task) error
	Recv() (*K8SMessage, error)
	grpc.ServerStream
}

type dccncliK8TaskServer struct {
	grpc.ServerStream
}

func (x *dccncliK8TaskServer) Send(m *Task) error {
	return x.ServerStream.SendMsg(m)
}

func (x *dccncliK8TaskServer) Recv() (*K8SMessage, error) {
	m := new(K8SMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Dccncli_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dccncli.dccncli",
	HandlerType: (*DccncliServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddTask",
			Handler:    _Dccncli_AddTask_Handler,
		},
		{
			MethodName: "TaskList",
			Handler:    _Dccncli_TaskList_Handler,
		},
		{
			MethodName: "CancelTask",
			Handler:    _Dccncli_CancelTask_Handler,
		},
		{
			MethodName: "K8ReportStatus",
			Handler:    _Dccncli_K8ReportStatus_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "K8Task",
			Handler:       _Dccncli_K8Task_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "dccncli.proto",
}
