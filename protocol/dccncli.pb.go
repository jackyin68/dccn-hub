// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dccncli.proto

package dccncli

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The dccn client request message containing the user's token
type TaskRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Region               string   `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Zone                 string   `protobuf:"bytes,3,opt,name=zone,proto3" json:"zone,omitempty"`
	Usertoken            string   `protobuf:"bytes,4,opt,name=usertoken,proto3" json:"usertoken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskRequest) Reset()         { *m = TaskRequest{} }
func (m *TaskRequest) String() string { return proto.CompactTextString(m) }
func (*TaskRequest) ProtoMessage()    {}
func (*TaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{0}
}

func (m *TaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskRequest.Unmarshal(m, b)
}
func (m *TaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskRequest.Marshal(b, m, deterministic)
}
func (m *TaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskRequest.Merge(m, src)
}
func (m *TaskRequest) XXX_Size() int {
	return xxx_messageInfo_TaskRequest.Size(m)
}
func (m *TaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskRequest proto.InternalMessageInfo

func (m *TaskRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TaskRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *TaskRequest) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *TaskRequest) GetUsertoken() string {
	if m != nil {
		return m.Usertoken
	}
	return ""
}

// The Ankr Hub response message containing the success or failure
type TaskResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Taskid               int64    `protobuf:"varint,2,opt,name=taskid,proto3" json:"taskid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskResponse) Reset()         { *m = TaskResponse{} }
func (m *TaskResponse) String() string { return proto.CompactTextString(m) }
func (*TaskResponse) ProtoMessage()    {}
func (*TaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{1}
}

func (m *TaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskResponse.Unmarshal(m, b)
}
func (m *TaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskResponse.Marshal(b, m, deterministic)
}
func (m *TaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskResponse.Merge(m, src)
}
func (m *TaskResponse) XXX_Size() int {
	return xxx_messageInfo_TaskResponse.Size(m)
}
func (m *TaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TaskResponse proto.InternalMessageInfo

func (m *TaskResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TaskResponse) GetTaskid() int64 {
	if m != nil {
		return m.Taskid
	}
	return 0
}

// The Client List request message
type TaskListRequest struct {
	Usertoken            string   `protobuf:"bytes,1,opt,name=usertoken,proto3" json:"usertoken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskListRequest) Reset()         { *m = TaskListRequest{} }
func (m *TaskListRequest) String() string { return proto.CompactTextString(m) }
func (*TaskListRequest) ProtoMessage()    {}
func (*TaskListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{2}
}

func (m *TaskListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskListRequest.Unmarshal(m, b)
}
func (m *TaskListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskListRequest.Marshal(b, m, deterministic)
}
func (m *TaskListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskListRequest.Merge(m, src)
}
func (m *TaskListRequest) XXX_Size() int {
	return xxx_messageInfo_TaskListRequest.Size(m)
}
func (m *TaskListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskListRequest proto.InternalMessageInfo

func (m *TaskListRequest) GetUsertoken() string {
	if m != nil {
		return m.Usertoken
	}
	return ""
}

type TaskInfo struct {
	Taskid               int64    `protobuf:"varint,1,opt,name=taskid,proto3" json:"taskid,omitempty"`
	Taskname             string   `protobuf:"bytes,2,opt,name=taskname,proto3" json:"taskname,omitempty"`
	Uptime               uint32   `protobuf:"varint,3,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Creationdate         uint64   `protobuf:"varint,4,opt,name=creationdate,proto3" json:"creationdate,omitempty"`
	Status               string   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskInfo) Reset()         { *m = TaskInfo{} }
func (m *TaskInfo) String() string { return proto.CompactTextString(m) }
func (*TaskInfo) ProtoMessage()    {}
func (*TaskInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{3}
}

func (m *TaskInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskInfo.Unmarshal(m, b)
}
func (m *TaskInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskInfo.Marshal(b, m, deterministic)
}
func (m *TaskInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskInfo.Merge(m, src)
}
func (m *TaskInfo) XXX_Size() int {
	return xxx_messageInfo_TaskInfo.Size(m)
}
func (m *TaskInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TaskInfo proto.InternalMessageInfo

func (m *TaskInfo) GetTaskid() int64 {
	if m != nil {
		return m.Taskid
	}
	return 0
}

func (m *TaskInfo) GetTaskname() string {
	if m != nil {
		return m.Taskname
	}
	return ""
}

func (m *TaskInfo) GetUptime() uint32 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *TaskInfo) GetCreationdate() uint64 {
	if m != nil {
		return m.Creationdate
	}
	return 0
}

func (m *TaskInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type TaskListResponse struct {
	Tasksinfo            []*TaskInfo `protobuf:"bytes,1,rep,name=tasksinfo,proto3" json:"tasksinfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TaskListResponse) Reset()         { *m = TaskListResponse{} }
func (m *TaskListResponse) String() string { return proto.CompactTextString(m) }
func (*TaskListResponse) ProtoMessage()    {}
func (*TaskListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{4}
}

func (m *TaskListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskListResponse.Unmarshal(m, b)
}
func (m *TaskListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskListResponse.Marshal(b, m, deterministic)
}
func (m *TaskListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskListResponse.Merge(m, src)
}
func (m *TaskListResponse) XXX_Size() int {
	return xxx_messageInfo_TaskListResponse.Size(m)
}
func (m *TaskListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TaskListResponse proto.InternalMessageInfo

func (m *TaskListResponse) GetTasksinfo() []*TaskInfo {
	if m != nil {
		return m.Tasksinfo
	}
	return nil
}

func init() {
	proto.RegisterType((*TaskRequest)(nil), "dccncli.TaskRequest")
	proto.RegisterType((*TaskResponse)(nil), "dccncli.TaskResponse")
	proto.RegisterType((*TaskListRequest)(nil), "dccncli.TaskListRequest")
	proto.RegisterType((*TaskInfo)(nil), "dccncli.TaskInfo")
	proto.RegisterType((*TaskListResponse)(nil), "dccncli.TaskListResponse")
}

func init() { proto.RegisterFile("dccncli.proto", fileDescriptor_97ba3c0cb7e5628c) }

var fileDescriptor_97ba3c0cb7e5628c = []byte{
	// 349 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x52, 0x4b, 0x4e, 0xc3, 0x30,
	0x10, 0xc5, 0xb4, 0xf4, 0x33, 0x6d, 0x05, 0x58, 0x80, 0x42, 0xc5, 0x02, 0x65, 0x55, 0xb1, 0x48,
	0xa5, 0xb2, 0x61, 0x85, 0xd4, 0x96, 0x0d, 0x12, 0x8b, 0xca, 0xe2, 0x02, 0x26, 0x31, 0x95, 0xd5,
	0xd6, 0x0e, 0xb1, 0x23, 0x21, 0x0e, 0xc0, 0x01, 0x38, 0x31, 0xf1, 0x8f, 0x26, 0x15, 0xbb, 0x79,
	0xe3, 0x37, 0xf3, 0xe6, 0x8d, 0x07, 0x46, 0x59, 0x9a, 0x8a, 0x74, 0xcb, 0x93, 0xbc, 0x90, 0x5a,
	0xe2, 0xae, 0x87, 0xf1, 0x06, 0x06, 0xaf, 0x54, 0x6d, 0x08, 0xfb, 0x28, 0x99, 0xd2, 0x18, 0x43,
	0x5b, 0xd0, 0x1d, 0x8b, 0xd0, 0x2d, 0x9a, 0xf4, 0x89, 0x8d, 0xf1, 0x15, 0x74, 0x0a, 0xb6, 0xe6,
	0x52, 0x44, 0xc7, 0x36, 0xeb, 0x91, 0xe1, 0x7e, 0x49, 0xc1, 0xa2, 0x96, 0xe3, 0x9a, 0x18, 0xdf,
	0x40, 0xbf, 0x54, 0xac, 0xd0, 0x72, 0xc3, 0x44, 0xd4, 0xb6, 0x0f, 0xfb, 0x44, 0xfc, 0x08, 0x43,
	0x27, 0xa6, 0x72, 0x29, 0x94, 0xed, 0xac, 0x34, 0xd5, 0xa5, 0xf2, 0x7a, 0x1e, 0x99, 0xbc, 0xae,
	0x78, 0x3c, 0xb3, 0x8a, 0x2d, 0xe2, 0x51, 0x3c, 0x85, 0x53, 0x53, 0xff, 0xc2, 0x95, 0x0e, 0x03,
	0x37, 0x04, 0xd1, 0xa1, 0xe0, 0x0f, 0x82, 0x9e, 0xa9, 0x78, 0x16, 0xef, 0xb2, 0xd6, 0x15, 0xd5,
	0xbb, 0xe2, 0x31, 0xf4, 0x4c, 0x64, 0x7d, 0x3b, 0x87, 0x7f, 0xd8, 0xd4, 0x94, 0xb9, 0xe6, 0x3b,
	0xe7, 0x72, 0x44, 0x3c, 0xc2, 0x31, 0x0c, 0xd3, 0x82, 0x51, 0x5d, 0xed, 0x21, 0xa3, 0x9a, 0x59,
	0xab, 0x6d, 0xd2, 0xc8, 0xd5, 0xdc, 0x9d, 0xd4, 0xdd, 0xc5, 0x4b, 0x38, 0xdb, 0xbb, 0xf0, 0x9b,
	0x98, 0x42, 0xdf, 0x68, 0x2a, 0x5e, 0x0d, 0x5a, 0x8d, 0xd7, 0x9a, 0x0c, 0x66, 0xe7, 0x49, 0xf8,
	0xb2, 0xe0, 0x80, 0xec, 0x39, 0xb3, 0x6f, 0x04, 0xe1, 0x0f, 0xf1, 0x03, 0x74, 0xe7, 0x59, 0x66,
	0x58, 0xf8, 0xa2, 0x51, 0xe4, 0x97, 0x34, 0xbe, 0x3c, 0xc8, 0x3a, 0xd1, 0xf8, 0x08, 0xcf, 0xdd,
	0x7a, 0xcc, 0x28, 0x38, 0x6a, 0x90, 0x6a, 0x3b, 0x1e, 0x5f, 0xff, 0xf3, 0x12, 0x5a, 0x2c, 0xee,
	0x20, 0xe2, 0x32, 0x59, 0x17, 0x79, 0x9a, 0xb0, 0x4f, 0xba, 0xcb, 0xb7, 0x4c, 0x05, 0xfa, 0x62,
	0xf8, 0x54, 0x05, 0xcb, 0x2d, 0x5f, 0x99, 0x9b, 0x5b, 0xa1, 0xb7, 0x8e, 0x3d, 0xbe, 0xfb, 0xdf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x29, 0xd0, 0x6d, 0x85, 0x8d, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DccncliClient is the client API for Dccncli service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DccncliClient interface {
	// Sends request to start a task and list task
	AddTask(ctx context.Context, in *TaskRequest, opts ...grpc.CallOption) (*TaskResponse, error)
	TaskList(ctx context.Context, in *TaskListRequest, opts ...grpc.CallOption) (*TaskListResponse, error)
}

type dccncliClient struct {
	cc *grpc.ClientConn
}

func NewDccncliClient(cc *grpc.ClientConn) DccncliClient {
	return &dccncliClient{cc}
}

func (c *dccncliClient) AddTask(ctx context.Context, in *TaskRequest, opts ...grpc.CallOption) (*TaskResponse, error) {
	out := new(TaskResponse)
	err := c.cc.Invoke(ctx, "/dccncli.dccncli/AddTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dccncliClient) TaskList(ctx context.Context, in *TaskListRequest, opts ...grpc.CallOption) (*TaskListResponse, error) {
	out := new(TaskListResponse)
	err := c.cc.Invoke(ctx, "/dccncli.dccncli/TaskList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DccncliServer is the server API for Dccncli service.
type DccncliServer interface {
	// Sends request to start a task and list task
	AddTask(context.Context, *TaskRequest) (*TaskResponse, error)
	TaskList(context.Context, *TaskListRequest) (*TaskListResponse, error)
}

func RegisterDccncliServer(s *grpc.Server, srv DccncliServer) {
	s.RegisterService(&_Dccncli_serviceDesc, srv)
}

func _Dccncli_AddTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DccncliServer).AddTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dccncli.dccncli/AddTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DccncliServer).AddTask(ctx, req.(*TaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dccncli_TaskList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DccncliServer).TaskList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dccncli.dccncli/TaskList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DccncliServer).TaskList(ctx, req.(*TaskListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dccncli_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dccncli.dccncli",
	HandlerType: (*DccncliServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddTask",
			Handler:    _Dccncli_AddTask_Handler,
		},
		{
			MethodName: "TaskList",
			Handler:    _Dccncli_TaskList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dccncli.proto",
}
