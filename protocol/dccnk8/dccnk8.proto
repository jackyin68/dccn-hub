// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.dccnk8";
option java_outer_classname = "DccnK8Proto";

package dccnk8;


// The dccnk8 service definition.
service dccnk8 {
  // Sends request to start a task to kubernetes cluster in the data center after deciding
  rpc K8AddTask (K8AddTaskRequest) returns (K8AddTaskResponse) {}
  rpc K8CancelTask (K8CancelTaskRequest) returns (K8CancelTaskResponse) {}
  rpc K8TaskStatus (K8TaskStatusRequest) returns (K8TaskStatusResponse) {}
}

// The dccn hub sends message to the kubernetes cluster
message K8AddTaskRequest {
  int64 taskid = 1; //  id of task
  string name = 2; // name of the task/image to run after hub selects the right datacenter
  string extra = 3; //extra for other arguments
}

// The K8Task response message containing the success or failure
message K8AddTaskResponse {
  string status = 1; // Success or Failure
}


message K8CancelTaskRequest {
  string taskid = 1;
}

// The K8Task response message containing the success or failure
message K8CancelTaskResponse {
  string status = 1; // Success or Failure

}


message K8TaskStatusRequest {
  int64 taskid = 1; //  id of task
}

// The K8Task response message containing the success or failure
message K8TaskStatusResponse {
  string taskid = 1;
  string status = 2; // Success or Failure
  string report = 3;


}
