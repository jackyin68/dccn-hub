version: 2
jobs:
  build:
    docker:
      # Build in Python container to install AWS CLI
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/Ankr-network/dccn-hub
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: copy ssh key
          command: |
            cp ${HOME}/.ssh/id_rsa id_rsa
      - run:
          name: Install AWSCLI
          command: |
            curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
            unzip awscli-bundle.zip
            sudo ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
      - run:
          name: "Log in to AWS ECR"
          command: eval $(aws ecr get-login --no-include-email --region us-west-2)
      - run:
          name: "Build & Push Docker Image"
          command: |
            BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
            SHA1_SHORT=$(git rev-parse --short HEAD)
            DATE=`date +%Y%m%d%H%M%S`
            if [[ ($BRANCH_NAME == "develop") ]]
            then
              BRANCH_NAME="dev"
            elif [[ ($BRANCH_NAME == "master") ]]
            then
              BRANCH_NAME="stage"
            else
              BRANCH_NAME="feat"
            fi

            declare -a component_arr=("dccn-hub-taskmgr" "dccn-hub-api" "dccn-hub-usermgr")
            declare -a dockerfile_arr=("task" "api" "user")
            if [[ (${#component_arr[@]} == ${#dockerfile_arr[@]}) ]]
            then
              arrlen=${#component_arr[@]}
            else
              exit 1
            fi
            for((i=0; i<arrlen; i++)); do
              docker build --no-cache -f "dockerfile"/${dockerfile_arr[$i]}.Dockerfile -t ${component_arr[$i]}:$BRANCH_NAME .
              for TAG in $BRANCH_NAME $SHA1_SHORT $BRANCH_NAME$DATE; do
                docker tag ${component_arr[$i]}:$BRANCH_NAME $AWS_ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com/${component_arr[$i]}:$TAG
                docker push $AWS_ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com/${component_arr[$i]}:$TAG
              done
            done
